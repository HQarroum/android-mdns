/*
 * Copyright (c) 2002 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 * 
 * This file contains Original Code and/or Modifications of Original Code
 * as defined in and that are subject to the Apple Public Source License
 * Version 2.0 (the 'License'). You may not use this file except in
 * compliance with the License. Please obtain a copy of the License at
 * http://www.opensource.apple.com/apsl/ and read it before using this
 * file.
 * 
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
 * Please see the License for the specific language governing rights and
 * limitations under the License.
 * 
 * @APPLE_LICENSE_HEADER_END@
 */
 
subsystem
	DNSServiceDiscoveryReply 7250;

ServerPrefix internal_;

#include <mach/std_types.defs>
#include <mach/mach_types.defs>

import "DNSServiceDiscoveryDefines.h";

type DNSCString = c_string[*:1024];
type sockaddr_t = array[128] of char;

simpleroutine DNSServiceDomainEnumerationReply_rpc(
				reply: mach_port_t;
                        in	resultType: int;
                        in	replyDomain: DNSCString;
                        in 	flags: int;
				SendTime 	to: natural_t);

simpleroutine DNSServiceBrowserReply_rpc(
				reply: mach_port_t;
                        in	resultType: int;
                        in	replyName: DNSCString;
                        in	replyType: DNSCString;
                        in	replyDomain: DNSCString;
                        in 	flags: int;
				SendTime 	to: natural_t);

                        
simpleroutine DNSServiceRegistrationReply_rpc(
				reply: mach_port_t;
                        in	resultType: int;
				SendTime 	to: natural_t);


simpleroutine DNSServiceResolverReply_rpc(
				reply: mach_port_t;
                        in	interface: sockaddr_t;
                        in	address: sockaddr_t;
                        in	txtRecord: DNSCString;
                        in 	flags: int;
				SendTime 	to: natural_t);
